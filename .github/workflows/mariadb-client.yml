name: build

on:
  push:
    branches:
      - main
    paths:
      - "mariadb-client/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Prepare tags
        id: prep
        run: |
          IMAGE=ectobit/mariadb-client
          VERSION=$(grep FROM mariadb-client/Dockerfile | awk '{ print $2 }' | cut -d ':' -f 2)
          echo $VERSION
          echo ::set-output name=version::${VERSION}
      # - name: Build and push image to Docker Hub
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./mariadb-client
      #     file: ./mariadb-client/Dockerfile
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.prep.outputs.tags }}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      #     labels: |
      #       org.opencontainers.image.title=${{ github.event.repository.name }}
      #       org.opencontainers.image.description=${{ github.event.repository.description }}
      #       org.opencontainers.image.url=${{ github.event.repository.html_url }}
      #       org.opencontainers.image.source=${{ github.event.repository.clone_url }}
      #       org.opencontainers.image.version=${{ steps.prep.outputs.version }}
      #       org.opencontainers.image.created=${{ steps.prep.outputs.created }}
      #       org.opencontainers.image.revision=${{ github.sha }}
      #       org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      #       org.opencontainers.image.vendor=ectobit
